<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit7.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAA+VJREFUeF7tmjloFGEYhqMJeMVCRRBsLMQrBvHAUkHQVgwGrSzsRNAoNjYqFmoR
        iygeaGEwQQuNKPG2ES1UMBCNpvM2nhAhYEANic8380Zdd2Znd9nszk7+B15m9//e/3i/EGYz2YpyZ2ho
        qHpwcHAjakVP0UfUi76i66gBz3jZkwOhKgm3FX3idSb2aUpyIPR0dE8BQ8GzR1OSA6EmoQ5lDAVPo6Yk
        C4K1KWMoeJpkTxYEW6eMmTgke/KgAU8UMhDqp7mMkT0S/BP0Mv5w2Fo/ZijNaKzskbDeQdSgt/GHw+72
        c6ZD7ReaJGskeBs174qG4g+HPeOlDYH6allDwTYGX5M/w5vzRqVgMExG29AF9JA5j4sp9jyso9hZbjIW
        CvWMtz0sFv647/bhfb/K6VCsRe/lLQnsf0vHsfNc03Ag1LtlTYNyFfXzvvMvjPXKkgqFaahHPq9TqJOX
        gT+pkRJ7ntWR7ExRvwLGXNn/QMk+MgfOZbxLtlQo7JfHTEfROJVKBmfYoiOFgsfoQAfQSobGc23xq4E0
        a/lUmPTIqlxfcqnUcEnhLKvsTLnAnJ96GQj1Oi2fCoVXMsTiNsFR5nGWD3amQsF671DwByEKr2Vq01DJ
        4Azz0Ufv1AWENTdri3Ti0gD2X4Z6vRMXENY8xyX8I3McGsDeNSjqYUfOsOYDLtXaJphSN0DhP9sZCglr
        tnKJfjxWygaw58JCh2c9uzWu0RbRYC5JA9jPPn1+8U6dJfjtIegKtAmdQO3oJmpBe1Gtls8eJhW9Aey1
        HH3zUmUJfrtdz9IShaPYDcgzvN3HZ2uJUPDMwb6P6w0NRYO5aA1gj5kop/s8/k9ovpbIiGXQnNcaisbM
        mlSMBpyyvbIFf9bhDcugebFtQNY/fbwWfoGmZoVl0NzYNuCH7RUFvpzDG5ZB82PbgOe2Vybw5BXesAxa
        I7YN2Gl7hUE97/CGZdA68WwA29jjqqu23/8w3oNqZM0Ly6C14tkAg62sCdtRJ7J/bb9FRxifIUvesE78
        GzCSuAa4BrgGuAa4BrgGuAa4BrgGuAbk1oAXmtSuobKFDN4fWpZJQ9Fgvq9JH1D5fJPqP4gwkfMP/3fp
        roajYdIuTbImXOQyRaWygXNPRZf8FF6OHSqlQ3EDeo/sT1HTNzSguR687/unHnf16dgevB9Almm4/o7h
        esX3GnDZt44eyHxJ8b0GnNT4qIHMxxTfa0CdxkcNZF6r+H8eSUU+nU0KZO3ikvrdJwaXoH7fklzI+B0t
        UuxUqC+l2O1bkwfZnqHFihsMvipUj5ox30Z3yly3lWU911h85c/hcDgcDofDUXoqKn4DsBbld1ZiT2UA
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="elipseControl1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>